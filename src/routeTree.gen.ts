/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyOtpRouteRouteImport } from './routes/verify-otp/route'
import { Route as CompanyRouteRouteImport } from './routes/company/route'
import { Route as publicRouteRouteImport } from './routes/(public)/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as CompanyIndexRouteImport } from './routes/company/index'
import { Route as CompanyRegisterIndexRouteImport } from './routes/company-register/index'
import { Route as CompanyRegisterSuccessIndexRouteImport } from './routes/company-register-success/index'
import { Route as CompanyLoginIndexRouteImport } from './routes/company-login/index'
import { Route as publicIndexRouteImport } from './routes/(public)/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as AuthenticatedAdminRouteRouteImport } from './routes/_authenticated/admin/route'
import { Route as publicCompaniesRouteRouteImport } from './routes/(public)/companies/route'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/admin/index'
import { Route as publicTermsIndexRouteImport } from './routes/(public)/terms/index'
import { Route as publicTalentPoolIndexRouteImport } from './routes/(public)/talent-pool/index'
import { Route as publicProjectsIndexRouteImport } from './routes/(public)/projects/index'
import { Route as publicPrivacyIndexRouteImport } from './routes/(public)/privacy/index'
import { Route as publicCompaniesIndexRouteImport } from './routes/(public)/companies/index'
import { Route as authSignUpIndexRouteImport } from './routes/(auth)/sign-up/index'
import { Route as authSignInIndexRouteImport } from './routes/(auth)/sign-in/index'
import { Route as authForgotPasswordIndexRouteImport } from './routes/(auth)/forgot-password/index'
import { Route as publicCompaniesCompanyIdRouteImport } from './routes/(public)/companies/$companyId'
import { Route as AuthenticatedAdminSettingsRouteRouteImport } from './routes/_authenticated/admin/settings/route'
import { Route as AuthenticatedAdminUsersIndexRouteImport } from './routes/_authenticated/admin/users/index'
import { Route as AuthenticatedAdminTasksIndexRouteImport } from './routes/_authenticated/admin/tasks/index'
import { Route as AuthenticatedAdminSettingsIndexRouteImport } from './routes/_authenticated/admin/settings/index'
import { Route as AuthenticatedAdminCompaniesIndexRouteImport } from './routes/_authenticated/admin/companies/index'
import { Route as AuthenticatedAdminSettingsAppearanceRouteImport } from './routes/_authenticated/admin/settings/appearance'
import { Route as AuthenticatedAdminSettingsAccountRouteImport } from './routes/_authenticated/admin/settings/account'
import { Route as AuthenticatedAdminUsersEditIndexRouteImport } from './routes/_authenticated/admin/users/edit/index'
import { Route as AuthenticatedAdminUsersCreateIndexRouteImport } from './routes/_authenticated/admin/users/create/index'
import { Route as AuthenticatedAdminCompaniesEditIndexRouteImport } from './routes/_authenticated/admin/companies/edit/index'
import { Route as AuthenticatedAdminCompaniesCreateIndexRouteImport } from './routes/_authenticated/admin/companies/create/index'
import { Route as AuthenticatedAdminCompaniesApproveIndexRouteImport } from './routes/_authenticated/admin/companies/approve/index'

const VerifyOtpRouteRoute = VerifyOtpRouteRouteImport.update({
  id: '/verify-otp',
  path: '/verify-otp',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyRouteRoute = CompanyRouteRouteImport.update({
  id: '/company',
  path: '/company',
  getParentRoute: () => rootRouteImport,
} as any)
const publicRouteRoute = publicRouteRouteImport.update({
  id: '/(public)',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyIndexRoute = CompanyIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CompanyRouteRoute,
} as any)
const CompanyRegisterIndexRoute = CompanyRegisterIndexRouteImport.update({
  id: '/company-register/',
  path: '/company-register/',
  getParentRoute: () => rootRouteImport,
} as any)
const CompanyRegisterSuccessIndexRoute =
  CompanyRegisterSuccessIndexRouteImport.update({
    id: '/company-register-success/',
    path: '/company-register-success/',
    getParentRoute: () => rootRouteImport,
  } as any)
const CompanyLoginIndexRoute = CompanyLoginIndexRouteImport.update({
  id: '/company-login/',
  path: '/company-login/',
  getParentRoute: () => rootRouteImport,
} as any)
const publicIndexRoute = publicIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteRouteImport.update({
  id: '/_authenticated/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const publicCompaniesRouteRoute = publicCompaniesRouteRouteImport.update({
  id: '/companies',
  path: '/companies',
  getParentRoute: () => publicRouteRoute,
} as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)
const publicTermsIndexRoute = publicTermsIndexRouteImport.update({
  id: '/terms/',
  path: '/terms/',
  getParentRoute: () => publicRouteRoute,
} as any)
const publicTalentPoolIndexRoute = publicTalentPoolIndexRouteImport.update({
  id: '/talent-pool/',
  path: '/talent-pool/',
  getParentRoute: () => publicRouteRoute,
} as any)
const publicProjectsIndexRoute = publicProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => publicRouteRoute,
} as any)
const publicPrivacyIndexRoute = publicPrivacyIndexRouteImport.update({
  id: '/privacy/',
  path: '/privacy/',
  getParentRoute: () => publicRouteRoute,
} as any)
const publicCompaniesIndexRoute = publicCompaniesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => publicCompaniesRouteRoute,
} as any)
const authSignUpIndexRoute = authSignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => authRouteRoute,
} as any)
const authSignInIndexRoute = authSignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => authRouteRoute,
} as any)
const authForgotPasswordIndexRoute = authForgotPasswordIndexRouteImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => authRouteRoute,
} as any)
const publicCompaniesCompanyIdRoute =
  publicCompaniesCompanyIdRouteImport.update({
    id: '/$companyId',
    path: '/$companyId',
    getParentRoute: () => publicCompaniesRouteRoute,
  } as any)
const AuthenticatedAdminSettingsRouteRoute =
  AuthenticatedAdminSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminUsersIndexRoute =
  AuthenticatedAdminUsersIndexRouteImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminTasksIndexRoute =
  AuthenticatedAdminTasksIndexRouteImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminSettingsIndexRoute =
  AuthenticatedAdminSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminCompaniesIndexRoute =
  AuthenticatedAdminCompaniesIndexRouteImport.update({
    id: '/companies/',
    path: '/companies/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminSettingsAppearanceRoute =
  AuthenticatedAdminSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminSettingsAccountRoute =
  AuthenticatedAdminSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminUsersEditIndexRoute =
  AuthenticatedAdminUsersEditIndexRouteImport.update({
    id: '/users/edit/',
    path: '/users/edit/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminUsersCreateIndexRoute =
  AuthenticatedAdminUsersCreateIndexRouteImport.update({
    id: '/users/create/',
    path: '/users/create/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminCompaniesEditIndexRoute =
  AuthenticatedAdminCompaniesEditIndexRouteImport.update({
    id: '/companies/edit/',
    path: '/companies/edit/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminCompaniesCreateIndexRoute =
  AuthenticatedAdminCompaniesCreateIndexRouteImport.update({
    id: '/companies/create/',
    path: '/companies/create/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminCompaniesApproveIndexRoute =
  AuthenticatedAdminCompaniesApproveIndexRouteImport.update({
    id: '/companies/approve/',
    path: '/companies/approve/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/company': typeof CompanyRouteRouteWithChildren
  '/verify-otp': typeof VerifyOtpRouteRoute
  '/companies': typeof publicCompaniesRouteRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof publicIndexRoute
  '/company-login': typeof CompanyLoginIndexRoute
  '/company-register-success': typeof CompanyRegisterSuccessIndexRoute
  '/company-register': typeof CompanyRegisterIndexRoute
  '/company/': typeof CompanyIndexRoute
  '/admin/settings': typeof AuthenticatedAdminSettingsRouteRouteWithChildren
  '/companies/$companyId': typeof publicCompaniesCompanyIdRoute
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/companies/': typeof publicCompaniesIndexRoute
  '/privacy': typeof publicPrivacyIndexRoute
  '/projects': typeof publicProjectsIndexRoute
  '/talent-pool': typeof publicTalentPoolIndexRoute
  '/terms': typeof publicTermsIndexRoute
  '/admin/': typeof AuthenticatedAdminIndexRoute
  '/admin/settings/account': typeof AuthenticatedAdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AuthenticatedAdminSettingsAppearanceRoute
  '/admin/companies': typeof AuthenticatedAdminCompaniesIndexRoute
  '/admin/settings/': typeof AuthenticatedAdminSettingsIndexRoute
  '/admin/tasks': typeof AuthenticatedAdminTasksIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
  '/admin/companies/approve': typeof AuthenticatedAdminCompaniesApproveIndexRoute
  '/admin/companies/create': typeof AuthenticatedAdminCompaniesCreateIndexRoute
  '/admin/companies/edit': typeof AuthenticatedAdminCompaniesEditIndexRoute
  '/admin/users/create': typeof AuthenticatedAdminUsersCreateIndexRoute
  '/admin/users/edit': typeof AuthenticatedAdminUsersEditIndexRoute
}
export interface FileRoutesByTo {
  '/verify-otp': typeof VerifyOtpRouteRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof publicIndexRoute
  '/company-login': typeof CompanyLoginIndexRoute
  '/company-register-success': typeof CompanyRegisterSuccessIndexRoute
  '/company-register': typeof CompanyRegisterIndexRoute
  '/company': typeof CompanyIndexRoute
  '/companies/$companyId': typeof publicCompaniesCompanyIdRoute
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/sign-in': typeof authSignInIndexRoute
  '/sign-up': typeof authSignUpIndexRoute
  '/companies': typeof publicCompaniesIndexRoute
  '/privacy': typeof publicPrivacyIndexRoute
  '/projects': typeof publicProjectsIndexRoute
  '/talent-pool': typeof publicTalentPoolIndexRoute
  '/terms': typeof publicTermsIndexRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/admin/settings/account': typeof AuthenticatedAdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AuthenticatedAdminSettingsAppearanceRoute
  '/admin/companies': typeof AuthenticatedAdminCompaniesIndexRoute
  '/admin/settings': typeof AuthenticatedAdminSettingsIndexRoute
  '/admin/tasks': typeof AuthenticatedAdminTasksIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
  '/admin/companies/approve': typeof AuthenticatedAdminCompaniesApproveIndexRoute
  '/admin/companies/create': typeof AuthenticatedAdminCompaniesCreateIndexRoute
  '/admin/companies/edit': typeof AuthenticatedAdminCompaniesEditIndexRoute
  '/admin/users/create': typeof AuthenticatedAdminUsersCreateIndexRoute
  '/admin/users/edit': typeof AuthenticatedAdminUsersEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authRouteRouteWithChildren
  '/(public)': typeof publicRouteRouteWithChildren
  '/company': typeof CompanyRouteRouteWithChildren
  '/verify-otp': typeof VerifyOtpRouteRoute
  '/(public)/companies': typeof publicCompaniesRouteRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/(public)/': typeof publicIndexRoute
  '/company-login/': typeof CompanyLoginIndexRoute
  '/company-register-success/': typeof CompanyRegisterSuccessIndexRoute
  '/company-register/': typeof CompanyRegisterIndexRoute
  '/company/': typeof CompanyIndexRoute
  '/_authenticated/admin/settings': typeof AuthenticatedAdminSettingsRouteRouteWithChildren
  '/(public)/companies/$companyId': typeof publicCompaniesCompanyIdRoute
  '/(auth)/forgot-password/': typeof authForgotPasswordIndexRoute
  '/(auth)/sign-in/': typeof authSignInIndexRoute
  '/(auth)/sign-up/': typeof authSignUpIndexRoute
  '/(public)/companies/': typeof publicCompaniesIndexRoute
  '/(public)/privacy/': typeof publicPrivacyIndexRoute
  '/(public)/projects/': typeof publicProjectsIndexRoute
  '/(public)/talent-pool/': typeof publicTalentPoolIndexRoute
  '/(public)/terms/': typeof publicTermsIndexRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/admin/settings/account': typeof AuthenticatedAdminSettingsAccountRoute
  '/_authenticated/admin/settings/appearance': typeof AuthenticatedAdminSettingsAppearanceRoute
  '/_authenticated/admin/companies/': typeof AuthenticatedAdminCompaniesIndexRoute
  '/_authenticated/admin/settings/': typeof AuthenticatedAdminSettingsIndexRoute
  '/_authenticated/admin/tasks/': typeof AuthenticatedAdminTasksIndexRoute
  '/_authenticated/admin/users/': typeof AuthenticatedAdminUsersIndexRoute
  '/_authenticated/admin/companies/approve/': typeof AuthenticatedAdminCompaniesApproveIndexRoute
  '/_authenticated/admin/companies/create/': typeof AuthenticatedAdminCompaniesCreateIndexRoute
  '/_authenticated/admin/companies/edit/': typeof AuthenticatedAdminCompaniesEditIndexRoute
  '/_authenticated/admin/users/create/': typeof AuthenticatedAdminUsersCreateIndexRoute
  '/_authenticated/admin/users/edit/': typeof AuthenticatedAdminUsersEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/company'
    | '/verify-otp'
    | '/companies'
    | '/admin'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/company-login'
    | '/company-register-success'
    | '/company-register'
    | '/company/'
    | '/admin/settings'
    | '/companies/$companyId'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/companies/'
    | '/privacy'
    | '/projects'
    | '/talent-pool'
    | '/terms'
    | '/admin/'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/companies'
    | '/admin/settings/'
    | '/admin/tasks'
    | '/admin/users'
    | '/admin/companies/approve'
    | '/admin/companies/create'
    | '/admin/companies/edit'
    | '/admin/users/create'
    | '/admin/users/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/verify-otp'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/company-login'
    | '/company-register-success'
    | '/company-register'
    | '/company'
    | '/companies/$companyId'
    | '/forgot-password'
    | '/sign-in'
    | '/sign-up'
    | '/companies'
    | '/privacy'
    | '/projects'
    | '/talent-pool'
    | '/terms'
    | '/admin'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/companies'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/users'
    | '/admin/companies/approve'
    | '/admin/companies/create'
    | '/admin/companies/edit'
    | '/admin/users/create'
    | '/admin/users/edit'
  id:
    | '__root__'
    | '/(auth)'
    | '/(public)'
    | '/company'
    | '/verify-otp'
    | '/(public)/companies'
    | '/_authenticated/admin'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(public)/'
    | '/company-login/'
    | '/company-register-success/'
    | '/company-register/'
    | '/company/'
    | '/_authenticated/admin/settings'
    | '/(public)/companies/$companyId'
    | '/(auth)/forgot-password/'
    | '/(auth)/sign-in/'
    | '/(auth)/sign-up/'
    | '/(public)/companies/'
    | '/(public)/privacy/'
    | '/(public)/projects/'
    | '/(public)/talent-pool/'
    | '/(public)/terms/'
    | '/_authenticated/admin/'
    | '/_authenticated/admin/settings/account'
    | '/_authenticated/admin/settings/appearance'
    | '/_authenticated/admin/companies/'
    | '/_authenticated/admin/settings/'
    | '/_authenticated/admin/tasks/'
    | '/_authenticated/admin/users/'
    | '/_authenticated/admin/companies/approve/'
    | '/_authenticated/admin/companies/create/'
    | '/_authenticated/admin/companies/edit/'
    | '/_authenticated/admin/users/create/'
    | '/_authenticated/admin/users/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  publicRouteRoute: typeof publicRouteRouteWithChildren
  CompanyRouteRoute: typeof CompanyRouteRouteWithChildren
  VerifyOtpRouteRoute: typeof VerifyOtpRouteRoute
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  CompanyLoginIndexRoute: typeof CompanyLoginIndexRoute
  CompanyRegisterSuccessIndexRoute: typeof CompanyRegisterSuccessIndexRoute
  CompanyRegisterIndexRoute: typeof CompanyRegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify-otp': {
      id: '/verify-otp'
      path: '/verify-otp'
      fullPath: '/verify-otp'
      preLoaderRoute: typeof VerifyOtpRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company': {
      id: '/company'
      path: '/company'
      fullPath: '/company'
      preLoaderRoute: typeof CompanyRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)': {
      id: '/(public)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof publicRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company/': {
      id: '/company/'
      path: '/'
      fullPath: '/company/'
      preLoaderRoute: typeof CompanyIndexRouteImport
      parentRoute: typeof CompanyRouteRoute
    }
    '/company-register/': {
      id: '/company-register/'
      path: '/company-register'
      fullPath: '/company-register'
      preLoaderRoute: typeof CompanyRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company-register-success/': {
      id: '/company-register-success/'
      path: '/company-register-success'
      fullPath: '/company-register-success'
      preLoaderRoute: typeof CompanyRegisterSuccessIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/company-login/': {
      id: '/company-login/'
      path: '/company-login'
      fullPath: '/company-login'
      preLoaderRoute: typeof CompanyLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/': {
      id: '/(public)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/companies': {
      id: '/(public)/companies'
      path: '/companies'
      fullPath: '/companies'
      preLoaderRoute: typeof publicCompaniesRouteRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/(public)/terms/': {
      id: '/(public)/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof publicTermsIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(public)/talent-pool/': {
      id: '/(public)/talent-pool/'
      path: '/talent-pool'
      fullPath: '/talent-pool'
      preLoaderRoute: typeof publicTalentPoolIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(public)/projects/': {
      id: '/(public)/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof publicProjectsIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(public)/privacy/': {
      id: '/(public)/privacy/'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof publicPrivacyIndexRouteImport
      parentRoute: typeof publicRouteRoute
    }
    '/(public)/companies/': {
      id: '/(public)/companies/'
      path: '/'
      fullPath: '/companies/'
      preLoaderRoute: typeof publicCompaniesIndexRouteImport
      parentRoute: typeof publicCompaniesRouteRoute
    }
    '/(auth)/sign-up/': {
      id: '/(auth)/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/sign-in/': {
      id: '/(auth)/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/forgot-password/': {
      id: '/(auth)/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(public)/companies/$companyId': {
      id: '/(public)/companies/$companyId'
      path: '/$companyId'
      fullPath: '/companies/$companyId'
      preLoaderRoute: typeof publicCompaniesCompanyIdRouteImport
      parentRoute: typeof publicCompaniesRouteRoute
    }
    '/_authenticated/admin/settings': {
      id: '/_authenticated/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AuthenticatedAdminSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/users/': {
      id: '/_authenticated/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthenticatedAdminUsersIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/tasks/': {
      id: '/_authenticated/admin/tasks/'
      path: '/tasks'
      fullPath: '/admin/tasks'
      preLoaderRoute: typeof AuthenticatedAdminTasksIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/settings/': {
      id: '/_authenticated/admin/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AuthenticatedAdminSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/companies/': {
      id: '/_authenticated/admin/companies/'
      path: '/companies'
      fullPath: '/admin/companies'
      preLoaderRoute: typeof AuthenticatedAdminCompaniesIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/settings/appearance': {
      id: '/_authenticated/admin/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AuthenticatedAdminSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/settings/account': {
      id: '/_authenticated/admin/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AuthenticatedAdminSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/users/edit/': {
      id: '/_authenticated/admin/users/edit/'
      path: '/users/edit'
      fullPath: '/admin/users/edit'
      preLoaderRoute: typeof AuthenticatedAdminUsersEditIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/users/create/': {
      id: '/_authenticated/admin/users/create/'
      path: '/users/create'
      fullPath: '/admin/users/create'
      preLoaderRoute: typeof AuthenticatedAdminUsersCreateIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/companies/edit/': {
      id: '/_authenticated/admin/companies/edit/'
      path: '/companies/edit'
      fullPath: '/admin/companies/edit'
      preLoaderRoute: typeof AuthenticatedAdminCompaniesEditIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/companies/create/': {
      id: '/_authenticated/admin/companies/create/'
      path: '/companies/create'
      fullPath: '/admin/companies/create'
      preLoaderRoute: typeof AuthenticatedAdminCompaniesCreateIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/companies/approve/': {
      id: '/_authenticated/admin/companies/approve/'
      path: '/companies/approve'
      fullPath: '/admin/companies/approve'
      preLoaderRoute: typeof AuthenticatedAdminCompaniesApproveIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authForgotPasswordIndexRoute: typeof authForgotPasswordIndexRoute
  authSignInIndexRoute: typeof authSignInIndexRoute
  authSignUpIndexRoute: typeof authSignUpIndexRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordIndexRoute: authForgotPasswordIndexRoute,
  authSignInIndexRoute: authSignInIndexRoute,
  authSignUpIndexRoute: authSignUpIndexRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface publicCompaniesRouteRouteChildren {
  publicCompaniesCompanyIdRoute: typeof publicCompaniesCompanyIdRoute
  publicCompaniesIndexRoute: typeof publicCompaniesIndexRoute
}

const publicCompaniesRouteRouteChildren: publicCompaniesRouteRouteChildren = {
  publicCompaniesCompanyIdRoute: publicCompaniesCompanyIdRoute,
  publicCompaniesIndexRoute: publicCompaniesIndexRoute,
}

const publicCompaniesRouteRouteWithChildren =
  publicCompaniesRouteRoute._addFileChildren(publicCompaniesRouteRouteChildren)

interface publicRouteRouteChildren {
  publicCompaniesRouteRoute: typeof publicCompaniesRouteRouteWithChildren
  publicIndexRoute: typeof publicIndexRoute
  publicPrivacyIndexRoute: typeof publicPrivacyIndexRoute
  publicProjectsIndexRoute: typeof publicProjectsIndexRoute
  publicTalentPoolIndexRoute: typeof publicTalentPoolIndexRoute
  publicTermsIndexRoute: typeof publicTermsIndexRoute
}

const publicRouteRouteChildren: publicRouteRouteChildren = {
  publicCompaniesRouteRoute: publicCompaniesRouteRouteWithChildren,
  publicIndexRoute: publicIndexRoute,
  publicPrivacyIndexRoute: publicPrivacyIndexRoute,
  publicProjectsIndexRoute: publicProjectsIndexRoute,
  publicTalentPoolIndexRoute: publicTalentPoolIndexRoute,
  publicTermsIndexRoute: publicTermsIndexRoute,
}

const publicRouteRouteWithChildren = publicRouteRoute._addFileChildren(
  publicRouteRouteChildren,
)

interface CompanyRouteRouteChildren {
  CompanyIndexRoute: typeof CompanyIndexRoute
}

const CompanyRouteRouteChildren: CompanyRouteRouteChildren = {
  CompanyIndexRoute: CompanyIndexRoute,
}

const CompanyRouteRouteWithChildren = CompanyRouteRoute._addFileChildren(
  CompanyRouteRouteChildren,
)

interface AuthenticatedAdminSettingsRouteRouteChildren {
  AuthenticatedAdminSettingsAccountRoute: typeof AuthenticatedAdminSettingsAccountRoute
  AuthenticatedAdminSettingsAppearanceRoute: typeof AuthenticatedAdminSettingsAppearanceRoute
  AuthenticatedAdminSettingsIndexRoute: typeof AuthenticatedAdminSettingsIndexRoute
}

const AuthenticatedAdminSettingsRouteRouteChildren: AuthenticatedAdminSettingsRouteRouteChildren =
  {
    AuthenticatedAdminSettingsAccountRoute:
      AuthenticatedAdminSettingsAccountRoute,
    AuthenticatedAdminSettingsAppearanceRoute:
      AuthenticatedAdminSettingsAppearanceRoute,
    AuthenticatedAdminSettingsIndexRoute: AuthenticatedAdminSettingsIndexRoute,
  }

const AuthenticatedAdminSettingsRouteRouteWithChildren =
  AuthenticatedAdminSettingsRouteRoute._addFileChildren(
    AuthenticatedAdminSettingsRouteRouteChildren,
  )

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminSettingsRouteRoute: typeof AuthenticatedAdminSettingsRouteRouteWithChildren
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminCompaniesIndexRoute: typeof AuthenticatedAdminCompaniesIndexRoute
  AuthenticatedAdminTasksIndexRoute: typeof AuthenticatedAdminTasksIndexRoute
  AuthenticatedAdminUsersIndexRoute: typeof AuthenticatedAdminUsersIndexRoute
  AuthenticatedAdminCompaniesApproveIndexRoute: typeof AuthenticatedAdminCompaniesApproveIndexRoute
  AuthenticatedAdminCompaniesCreateIndexRoute: typeof AuthenticatedAdminCompaniesCreateIndexRoute
  AuthenticatedAdminCompaniesEditIndexRoute: typeof AuthenticatedAdminCompaniesEditIndexRoute
  AuthenticatedAdminUsersCreateIndexRoute: typeof AuthenticatedAdminUsersCreateIndexRoute
  AuthenticatedAdminUsersEditIndexRoute: typeof AuthenticatedAdminUsersEditIndexRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminSettingsRouteRoute:
      AuthenticatedAdminSettingsRouteRouteWithChildren,
    AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
    AuthenticatedAdminCompaniesIndexRoute:
      AuthenticatedAdminCompaniesIndexRoute,
    AuthenticatedAdminTasksIndexRoute: AuthenticatedAdminTasksIndexRoute,
    AuthenticatedAdminUsersIndexRoute: AuthenticatedAdminUsersIndexRoute,
    AuthenticatedAdminCompaniesApproveIndexRoute:
      AuthenticatedAdminCompaniesApproveIndexRoute,
    AuthenticatedAdminCompaniesCreateIndexRoute:
      AuthenticatedAdminCompaniesCreateIndexRoute,
    AuthenticatedAdminCompaniesEditIndexRoute:
      AuthenticatedAdminCompaniesEditIndexRoute,
    AuthenticatedAdminUsersCreateIndexRoute:
      AuthenticatedAdminUsersCreateIndexRoute,
    AuthenticatedAdminUsersEditIndexRoute:
      AuthenticatedAdminUsersEditIndexRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  publicRouteRoute: publicRouteRouteWithChildren,
  CompanyRouteRoute: CompanyRouteRouteWithChildren,
  VerifyOtpRouteRoute: VerifyOtpRouteRoute,
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  CompanyLoginIndexRoute: CompanyLoginIndexRoute,
  CompanyRegisterSuccessIndexRoute: CompanyRegisterSuccessIndexRoute,
  CompanyRegisterIndexRoute: CompanyRegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
